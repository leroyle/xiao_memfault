;PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = wisblock_cli


; default target
[env]
platform = nordicnrf52
;board = xiaoblesense
board = xiaoble
framework = arduino
build_type = debug
; -Wl,-zmuldefs
build_flags = -DMEMFAULT_LIB -MMD -g3  -Wl,-z,muldefs -Wl,--build-id  -DCFG_DEBUG -DSEEED_XIAO_NRF52840   -DMEMFAULT -D BOARD_PCA10056 -DBOARD_PCA10056 -DCONFIG_GPIO_AS_PINRESET -DFLOAT_ABI_HARD -DNRF52840_XXAA -DNRF_SD_BLE_API_VERSION=6 -DS140 -DSOFTDEVICE_PRESENT -DSWI_DISABLE0 -mcpu=cortex-m4 -mthumb -mabi=aapcs   -mfloat-abi=hard -mfpu=fpv4-sp-d16 -ffunction-sections -fdata-sections -fno-strict-aliasing -fno-builtin -fshort-enums -Wl,-Map=memfault.map -DCFG_DEBUG -DSEEED_XIAO_NRF52840 -DRV_TEMP_SENSOR   -DFAKE_SENSOR
	-I src/include
	-I lib/memfault/arduino/framework-arduinoadafruitnrf52/include
	-I lib/memfault/arduino/framework-arduinoadafruitnrf52/ports/include
	-I lib/memfault/arduino/framework-arduinoadafruitnrf52/components/include/
	-I lib/nrf5_sdk/components/softdevice/mbr/headers

upload_port = /dev/ttyACM1


; targets Seeed Studio Xiao BLE
; uses default debug serial terminal, supports Memfault functionality
[env:xiao_term]

build_flags = ${env.build_flags}
        -D MEMFAULT_TERM
        -Wl,-Map=.pio/build/memfault_term/memfault_term.map
	-L linkscripts

lib_deps =
	lib/memfault
        lib/memfault/examples/nrf5/apps/memfault_demo_app/third_party/memfault/
	lib/nrf5_sdk/integration

board_build.ldscript = linkscripts/ldscript.ld


; targets Seeed Studio Xiao BLE
; requires Segger Debug module/JLinkRTTClient uses RTT interface
; supports Memfault functionality
[env:xiao_rtt]
build_flags = ${env.build_flags}
        -D MEMFAULT_RTT
        -Wl,-Map=.pio/build/memfault_rtt/memfault_rtt.map
	-L linkscripts

lib_deps =
	lib/memfault
        lib/memfault/examples/nrf5/apps/memfault_demo_app/third_party/memfault/
	lib/nrf5_sdk/integration

board_build.ldscript = linkscripts/ldscript.ld


; targets Seeed Studio Xiao BLE
; uses default serial terminal
; implements a custom CLI, does "not" support Memfault functionality
[env:xiao_cli]
build_flags = ${env.build_flags}
        -D TERM_CLI
        -Wl,-Map=.pio/build/term_cli/term_cli.map
        -Wl,-Map=.pio/build/term_cli/term_cli.map
	-I src
        -I lib/termcli/funbiscuit/src
        -I lib/termcli/local_cli/src
	-L linkscripts

lib_deps =
	lib/memfault
        lib/memfault/examples/nrf5/apps/memfault_demo_app/third_party/memfault/
	lib/nrf5_sdk/integration
        lib/termcli/funbiscuit
        lib/termcli/local_cli

board_build.ldscript = linkscripts/ldscript.ld

;;;;;;;;;;;;; Target Rak Wireless Wisblock  ;;;;;;;;;;;;;;;;;;;;

; targets Rak Wireless Wisblock
; uses default debug serial terminal, supports Memfault functionality
[env:wisblock_term]
platform = nordicnrf52
board = wiscore_rak4631
framework = arduino
build_flags = ${env.build_flags}
        -D MEMFAULT_TERM
        -Wl,-Map=.pio/build/wisblock_term/wisblock_term.map
	-L linkscripts

lib_deps =
	lib/memfault
        lib/memfault/examples/nrf5/apps/memfault_demo_app/third_party/memfault/
	lib/nrf5_sdk/integration

board_build.ldscript = linkscripts/ldscript_wisblock.ld


; target Rak Wireless Wisblock
; requires Segger Debug module/JLinkRTTClient uses RTT interface
; supports Memfault functionality
[env:wisblock_rtt]
platform = nordicnrf52
board = wiscore_rak4631
framework = arduino
build_flags = ${env.build_flags}
        -D MEMFAULT_RTT
        -Wl,-Map=.pio/build/wisblock_rtt/memfault_rtt.map
	-L linkscripts

lib_deps =
	lib/memfault
        lib/memfault/examples/nrf5/apps/memfault_demo_app/third_party/memfault/
	lib/nrf5_sdk/integration

board_build.ldscript = linkscripts/ldscript_wisblock.ld


; target Rak Wireless WisBlock
; uses default serial terminal
; implements a custom CLI, does "not" support Memfault functionality
[env:wisblock_cli]
platform = nordicnrf52
board = wiscore_rak4631
framework = arduino
build_flags = ${env.build_flags}
        -D TERM_CLI
        -Wl,-Map=.pio/build/wisblock_cli/wisblock_cli.map
	-I src
        -I lib/termcli/funbiscuit/src
        -I lib/termcli/local_cli/src
	-L linkscripts

lib_deps =
	lib/memfault
        lib/memfault/examples/nrf5/apps/memfault_demo_app/third_party/memfault/
	lib/nrf5_sdk/integration
        lib/termcli/funbiscuit
        lib/termcli/local_cli

board_build.ldscript = linkscripts/ldscript_wisblock.ld

